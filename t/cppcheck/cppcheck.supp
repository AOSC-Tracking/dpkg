//
// Suppression file for cppcheck.
///

// We assume that the system has a sane NULL definition.
varFuncNullUB

// TODO: While perhaps valid there are many to handle right away.
variableScope

// Ignore, this is an imported module.
unusedStructMember:lib/compat/obstack.c
nullPointerArithmetic:lib/compat/obstack.c

// Ignore, we are testing the functions.
knownConditionTrueFalse:lib/dpkg/t/t-macros.c

// Ignore, we use our own test assertions macros.
literalWithCharPtrCompare:lib/dpkg/t/t-test.c

// Ignore, the code is used only for its binary artifacts.
uninitMemberVar:*/Dpkg_Shlibs/patterns.cpp

// BUG: False positive, the variable uses operator() which writes to it.
constVariable:dselect/pkgsublist.cc:111

// BUG: False positive.
syntaxError:lib/dpkg/t/*.c

// BUG: False positive.
knownConditionTrueFalse:src/depcon.c:585
knownConditionTrueFalse:src/depcon.c:668

// BUG: False positive, the loop does an early exit.
identicalInnerCondition:lib/dpkg/fsys-hash.c:100

// BUG: False positive, the macros from lib/dpkg/dlist.h use the tail member.
unusedStructMember:lib/dpkg/triglib.c:378

// BUG: False positive, does not understand must-allocate functions.
nullPointer:src/unpack.c:195

// BUG: False positive, does not understand non-returning functions.
nullPointer:utils/start-stop-daemon.c:756
nullPointer:utils/start-stop-daemon.c:758

// BUG: False positive, does not understand parser.
nullPointerArithmeticRedundantCheck:lib/dpkg/pkg-format.c:82

// BUG: False positive, does not understand setjmp-style error handling.
redundantAssignment:lib/compat/selinux.c:73
nullPointerRedundantCheck:utils/update-alternatives.c:1193
uninitStructMember:utils/update-alternatives.c:1340
uninitStructMember:utils/update-alternatives.c:1341
uninitStructMember:utils/update-alternatives.c:1342

// BUG: False positive, does not understand ohshit(), ohshite() and
//      bad_format as error terminators.
doubleFree:src/script.c
doubleFree:utils/update-alternatives.c:1248
va_end_missing:lib/dpkg/parsehelp.c:68

// BUG: False positive, due to our local va_copy().
va_list_usedBeforeStarted:lib/compat/vasprintf.c
